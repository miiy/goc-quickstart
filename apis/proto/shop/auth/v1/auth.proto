syntax = "proto3";

option go_package = "github.com/miiy/goc/component/auth/api/v1;auth";
option java_multiple_files = true;
option java_outer_classname = "AuthProto";
option java_package = "com.github.miiy.goc.component.auth.api.v1";

package goc.auth.api.v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "buf/validate/validate.proto";

// authenticated user
message User {
  string username = 1;
}

// register
message RegisterRequest {
  string email = 1  [(buf.validate.field).string.min_len = 1];
  string username = 2 [(google.api.field_behavior) = REQUIRED];
  string password = 3 [(google.api.field_behavior) = REQUIRED];
  string password_confirmation = 4 [(google.api.field_behavior) = REQUIRED];
}

message RegisterResponse {
  User user = 1;
}

// register check
message FieldCheckRequest {
  string value = 1 [(google.api.field_behavior) = REQUIRED];
}

message FieldCheckResponse {
  bool exist = 1;
}

// login
message LoginRequest {
  string username = 1 [(google.api.field_behavior) = REQUIRED];
  string password = 2 [(google.api.field_behavior) = REQUIRED];
}

message LoginResponse {
  string token_type = 1;
  string access_token = 2;
  google.protobuf.Timestamp expires_at = 3;
  User user = 4;
}

message MpLoginRequest {
  string code = 1 [(google.api.field_behavior) = REQUIRED];
}

// refresh token
message RefreshTokenRequest {
  string access_token = 1;
}

message RefreshTokenResponse {
  string token_type = 1;
  string access_token = 2;
  google.protobuf.Timestamp expires_at = 3;
  User user = 4;
}

// Logout
message LogoutRequest {
  string access_token = 1;
}

message LogoutResponse {
}

service Auth {
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/register",
      body: "*"
    };
  }

  rpc UsernameCheck(FieldCheckRequest) returns (FieldCheckResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/register/username_check",
      body: "*"
    };
  }

  rpc EmailCheck(FieldCheckRequest) returns (FieldCheckResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/register/email_check",
      body: "*"
    };
  }

  rpc PhoneCheck(FieldCheckRequest) returns (FieldCheckResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/register/phone_check",
      body: "*"
    };
  }

  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/login",
      body: "*"
    };
  }

  rpc MpLogin(MpLoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/mplogin",
      body: "*"
    };
  }

  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http) = {
      post: "/v1/auth/token/refresh",
      body: "*"
    };
  }

  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post: "/v1/auth/logout",
      body: "*"
    };
  }

}
