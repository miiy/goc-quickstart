syntax = "proto3";

package post.v1;

option go_package = "postv1";
option java_multiple_files = true;
option java_package = "com.echo.v1";


import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Shop API";
    version: "1.0";
    contact: {
      name: "shop project";
      url: "https://github.com/miiy/goc/examples/shop";
      email: "none@example.com";
    };
    license: {
      name: "BSD 3-Clause License";
      url: "https://github.com/miiy/goc/blob/main/examples/shop/LICENSE.txt";
    }
  };
  // Overwriting host entry breaks tests, so this is not done here.
  external_docs: {
    url: "https://github.com/grpc-ecosystem/grpc-gateway";
    description: "More about goc";
  }
  schemes: HTTP;
  schemes: HTTPS;
  schemes: WSS;
};

enum PostStatus {
  POST_STATUS_UNSPECIFIED = 0;
  POST_STATUS_PUBLISHED = 1;
}

message Post {
  int64 id = 1;
  string title = 2;
  string content = 3;
  PostStatus status = 4;
  google.protobuf.Timestamp create_time = 5;
  google.protobuf.Timestamp update_time = 6;
  google.protobuf.Timestamp delete_time = 7;
}

message GetPostRequest {
  int64 id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The post id field."}];
}

message GetPostResponse {
  Post post = 1;
}


message CreatePostRequest {
  Post post = 1;
}

message CreatePostResponse {

}

message GetPostErrorRequest {

}

message GetPostErrorResponse {

}

service PostService {
  rpc GetPost(GetPostRequest) returns (GetPostResponse) {
    option (google.api.http) = {
      get: "/api/v1/post/{id}"
    };
  }

  rpc CreatePost(CreatePostRequest) returns (CreatePostResponse) {
    option (google.api.http) = {
      post: "/api/v1/post",
      body: "*"
    };
  }

  rpc GetPostError(GetPostErrorRequest) returns (GetPostErrorResponse) {
    option (google.api.http) = {
      get: "/api/v1/post-error",
    };
  }
}
