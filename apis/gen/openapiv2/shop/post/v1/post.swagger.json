{
  "swagger": "2.0",
  "info": {
    "title": "Shop API",
    "version": "1.0",
    "contact": {
      "name": "shop project",
      "url": "https://github.com/miiy/goc/examples/shop",
      "email": "none@example.com"
    },
    "license": {
      "name": "BSD 3-Clause License",
      "url": "https://github.com/miiy/goc/blob/main/examples/shop/LICENSE.txt"
    }
  },
  "tags": [
    {
      "name": "PostService"
    }
  ],
  "schemes": [
    "http",
    "https",
    "wss"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/post": {
      "post": {
        "operationId": "PostService_CreatePost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreatePostResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreatePostRequest"
            }
          }
        ],
        "tags": [
          "PostService"
        ]
      }
    },
    "/api/v1/post-error": {
      "get": {
        "operationId": "PostService_GetPostError",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPostErrorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "PostService"
        ]
      }
    },
    "/api/v1/post/{id}": {
      "get": {
        "operationId": "PostService_GetPost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPostResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The post id field.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "PostService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreatePostRequest": {
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/v1Post"
        }
      }
    },
    "v1CreatePostResponse": {
      "type": "object"
    },
    "v1GetPostErrorResponse": {
      "type": "object"
    },
    "v1GetPostResponse": {
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/v1Post"
        }
      }
    },
    "v1Post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1PostStatus"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "deleteTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1PostStatus": {
      "type": "string",
      "enum": [
        "POST_STATUS_UNSPECIFIED",
        "POST_STATUS_PUBLISHED"
      ],
      "default": "POST_STATUS_UNSPECIFIED"
    }
  },
  "externalDocs": {
    "description": "More about goc",
    "url": "https://github.com/grpc-ecosystem/grpc-gateway"
  }
}
